const content = {
  title: 'Content Management',
  subtitle: 'Edit the content of the main pages of the website.',
  saveSuccess: 'Content saved successfully!',
  field: {
    title: 'Title',
    body: 'Body Text',
    subtitle: 'Subtitle',
    imageUrl: 'Header Image URL',
    mapUrl: 'Map Image URL',
    footerDescription: 'Footer Description',
    quickLinksTitle: 'Quick Links Title',
    contactInfoTitle: 'Contact Info Title',
  },
  home: {
    title: 'Home Page',
    heroImageUrl: 'Upload New Background Image',
    currentHeroImage: 'Current Background Image',
    heroImageAlt: 'Search background preview'
  }
};

const accounting = {
    dashboardTitle: "Accounting Dashboard",
    dashboardSubtitle: "Comprehensive management of the company's finances",
    tabs: {
        overview: "Overview",
        journal: "Journal",
        coa: "Chart of Accounts",
        expenses: "Expense Management",
        reports: "Financial Reports",
    },
    overview: {
        title: "Financial Overview",
        totalRevenue: "Total Revenue",
        totalExpenses: "Total Expenses",
        netIncome: "Net Income",
        info: "These statistics are calculated based on all transactions recorded in the journal.",
    },
    coa: {
        title: "Chart of Accounts",
        code: "Account Code",
        name: "Account Name",
        type: "Account Type",
        editHint: "Double-click on the account name or type to edit.",
        types: {
            Asset: 'Asset',
            Liability: 'Liability',
            Equity: 'Equity',
            Revenue: 'Revenue',
            Expense: 'Expense',
        },
        addAccount: "Add New Account",
        modal: {
            addTitle: "Create New Account",
            editTitle: "Edit Account",
            code: "Account Code (Unique)",
            nameFa: "Account Name (Persian)",
            nameAr: "Account Name (Arabic)",
            nameEn: "Account Name (English)",
            type: "Account Type",
            parent: "Parent Account",
            noParent: "No Parent (Top Level)",
            isParent: "Is this account a main heading itself?",
            save: "Save Account",
        },
        errors: {
            duplicateCode: "The entered account code already exists.",
        }
    },
    journal: {
        title: "General Ledger",
        date: "Date",
        description: "Description",
        account: "Account",
        debit: "Debit",
        credit: "Credit",
        noEntries: "No entries to display.",
        bookingCreation: "Record booking {0} for flight {1} for user {2}",
        bookingCancellation: "Record cancellation of booking {0} for flight {1} for user {2}",
        expenseEntry: "Record expense: {0}",
        manualBooking: "Record manual booking {0} for customer {1}",
    },
    expenses: {
        title: "Expense Management",
        description: "Expense Description",
        descriptionHint: "e.g., Purchase of office supplies",
        amount: "Amount",
        submit: "Record Expense",
        date: "Date",
        account: "Expense Account",
        selectAccount: "Select an account...",
        recordedExpenses: "Recorded Expenses",
        noExpenses: "No expenses have been recorded.",
    },
    reports: {
        title: "Financial Reports",
        exportPDF: "Export PDF",
        exportExcel: "Export Excel",
        tabs: {
            pnl: "Profit & Loss",
            accountLedger: "Account Ledger",
            customerLedger: "Customer Ledger",
        },
        from: "From Date",
        to: "To Date",
        selectAccount: "Select Account",
        selectCustomer: "Select Customer",
        pnl: {
            title: "Profit & Loss Statement",
            period: "For the period from {0} to {1}",
            revenues: "Revenues",
            totalRevenues: "Total Revenues",
            expenses: "Expenses",
            totalExpenses: "Total Expenses",
            netIncome: "Net Income (Loss)",
            loss: "(Loss)",
        },
        accountLedger: {
            title: "Account Ledger: {0}",
            balance: "Balance",
            openingBalance: "Opening Balance",
        },
        customerLedger: {
            title: "Customer Ledger: {0}",
            purchaseDebit: "Purchase (Debit)",
            refundCredit: "Refund/Payment (Credit)",
            openingBalance: "Opening Balance",
        },
        noTransactions: "No transactions found in this period for this account/customer.",
    },
};

export const en = {
  header: {
    title: 'Smart Flight',
    nav: {
      domestic: 'Domestic Flights',
      international: 'International Flights',
      hotels: 'Hotels',
      tours: 'Tours',
    },
    userMenu: {
      login: 'Login / Sign Up',
      dashboard: 'Dashboard',
      profile: 'Profile',
      logout: 'Logout',
    },
    languageSwitcher: 'فارسی',
  },
  footer: {
    copyright: '© {0} Smart Flight. All rights reserved.',
    adminLogin: 'Admin Login',
    quickLinks: 'Quick Links',
    faq: 'FAQ',
    contactInfo: 'Contact Info',
    managementTitle: 'Footer Content',
  },
  about: {
    title: 'About Us',
    heroAlt: 'Airplane wing over the clouds'
  },
  contact: {
    title: 'Contact Us',
    address: 'Address',
    phone: 'Phone',
    email: 'Email',
    mapAlt: 'Office location map',
    form: {
      title: 'Send Us a Message',
      submit: 'Send Message',
      submitSuccess: 'Thank you! Your message has been sent successfully.'
    }
  },
  content: content,
  flightSearch: {
    title: 'Find Your Perfect Flight',
    subtitle: 'Fast, Easy, and Smart',
    tripType: {
      roundTrip: 'Round-trip',
      oneWay: 'One-way',
    },
    from: 'From',
    to: 'To',
    fromPlaceholder: 'Select origin city or airport',
    toPlaceholder: 'Select destination city or airport',
    departureDate: 'Departure Date',
    returnDate: 'Return Date',
    passengers: 'Passengers',
    search: 'Search',
    searching: 'Searching...',
    swap: 'Swap origin and destination',
    passengerPopover: {
      adults: 'Adults',
      children: 'Children',
      infants: 'Infants',
      total: '{0} Passenger(s)',
    },
    validation: {
      fromRequired: 'Please select origin city or airport',
      toRequired: 'Please select destination city or airport',
      sameOriginDestination: 'Origin and destination cannot be the same',
    },
    geminiError: 'An error occurred while fetching flight data. There might be a network or service issue. Please try again shortly.'
  },
  whyChooseUs: {
    title: 'Why Choose Smart Flight?',
    subtitle: 'We are committed to providing you with the best flight booking experience.',
    bestPrices: {
      title: 'Best Prices',
      description: 'We search hundreds of sites to find you the cheapest available prices.',
    },
    aiSearch: {
      title: 'AI-Powered Search',
      description: 'Our smart technology helps you find the best flights based on your preferences.',
    },
    support: {
      title: '24/7 Support',
      description: 'Our dedicated support team is available to help you anytime.',
    },
  },
  searchResults: {
    title: 'Search Results',
    found: '({0} flight(s) found)',
    resultsCount: '{count} flight(s) found',
    sort: 'Sort by:',
    cheapest: 'Cheapest',
    fastest: 'Fastest',
    bestValue: 'Best Value',
    noFlights: 'No flights found',
    noFlightsDescription: 'Sorry, no flights are available for your selected route and date. Please try a different date or destination.',
  },
  flightCard: {
    class: 'Class',
    aircraft: 'Aircraft',
    direct: 'Direct',
    stops: '{0} stop(s)',
    totalPrice: 'Total Price',
    selectFlight: 'Select Flight',
    remainingSeats: 'Remaining Seats',
    baggageAllowance: 'Baggage',
    flightNumber: 'Flight No.',
    seat: 'seat',
    currency: 'IRR',
    detailsAndRules: 'Details & Refund Rules',
    rulesTitle: 'Refund Rules',
    noRulesAvailable: 'Refund rules for this fare are not currently available.',
  },
  passengerDetails: {
    backToSearch: 'Back to Search Results',
    title: 'Passenger Information',
    subtitle: 'Please enter each passenger\'s information as it appears on their official ID.',
    adult: 'Adult {0}',
    child: 'Child {0}',
    infant: 'Infant {0}',
    iranian: 'Iranian',
    foreign: 'Foreign',
    firstName: 'First Name (in English)',
    lastName: 'Last Name (in English)',
    nationalId: 'National ID',
    gender: 'Gender',
    passportNumber: 'Passport Number',
    issuingCountry: 'Issuing Country',
    dob: 'Date of Birth (Gregorian)',
    passportExpiry: 'Passport Expiry Date',
    select: 'Select',
    male: 'Male',
    female: 'Female',
    firstNameEngHint: 'e.g., John',
    lastNameEngHint: 'e.g., Smith',
    nationalIdHint: '10-digit National ID',
    passportHint: 'e.g., A12345678',
    englishCharsOnly: 'Please use English characters only',
    nationalIdError: 'National ID must be 10 digits and contain only numbers',
    engAndNumbersOnly: 'Please use English characters and numbers only',
    submit: 'Submit & Continue',
    adults: 'Adults',
    children: 'Children',
    infants: 'Infants',
    selectFromList: 'Select from list',
    saveForLater: 'Save this passenger for future use',
    savedPassengersModal: {
        title: 'Saved Passengers',
        searchPlaceholder: 'Search by name or ID...',
        select: 'Select',
        notFound: 'No saved passengers found.'
    },
    contactInfo: "Contact Information",
    contactInfoSubtitle: "Booking confirmation and updates will be sent to this information.",
    phoneNumber: "Mobile Number",
  },
  priceSummary: {
    title: 'Price Summary',
    adult: 'Adult ({0} person(s))',
    child: 'Child ({0} person(s))',
    infant: 'Infant ({0} person(s))',
    taxes: 'Total Taxes & Fees',
    forPassengers: 'For {0} passenger(s))',
    total: 'Total Amount',
  },
  bookingReview: {
    flightSummary: 'Flight Summary',
    passengerDetails: 'Passenger Details',
    walletBalance: 'Wallet Balance',
    editInfo: 'Edit Information',
    confirmAndPay: 'Confirm & Pay from Wallet',
    insufficientFunds: 'Insufficient Funds',
    bookingSuccess: 'Your booking was successful. Your reference number is {0}.',
    error: 'An error occurred. Please try again.',
    insufficientFundsAlert: 'Your wallet balance is insufficient to complete this booking. Please top up your wallet first.',
    adult: 'Adult {0}',
    child: 'Child {0}',
    infant: 'Infant {0}',
    adults: 'Adults',
    children: 'Children',
    infants: 'Infants',
    name: 'Name',
    gender: 'Gender',
    nationality: 'Nationality',
    iranian: 'Iranian',
    foreign: 'Foreign',
    nationalId: 'National ID',
    passportNumber: 'Passport Number',
    idNumber: 'ID Number'
  },
  stepper: {
    selectFlight: 'Select Flight',
    passengerDetails: 'Passenger Details',
    confirmAndPay: 'Confirm & Pay'
  },
  login: {
    title: 'Login to Your Account',
    subtitle: 'Glad to see you again!',
    username: 'Username',
    password: 'Password',
    usernameHint: 'Enter your username',
    passwordHint: '********',
    rememberMe: 'Remember me',
    forgotPassword: 'Forgot password?',
    login: 'Login',
    noAccount: "Don't have an account?",
    createAccount: 'Create a new account',
    errors: {
      suspended: 'Your account has been suspended.',
      invalid: 'Invalid username or password.',
    }
  },
  signup: {
    title: 'Create a New Account',
    subtitle: 'Join the Smart Flight family!',
    fullName: 'Full Name',
    fullNameHint: 'First and last name',
    username: 'Username',
    usernameHint: 'Username (in English)',
    usernameError: 'Only English letters, numbers, and underscore (_) are allowed',
    email: 'Email',
    emailHint: 'your@email.com',
    password: 'Password',
    passwordHint: 'At least 8 characters',
    signup: 'Sign Up',
    hasAccount: 'Already have an account?',
    login: 'Login',
    errors: {
      usernameExists: 'This username is already taken.',
      emailExists: 'This email is already registered.'
    }
  },
  profile: {
    sidebar: {
      profile: 'My Profile',
      wallet: 'Wallet',
      bookings: 'My Bookings',
      tickets: 'Support Tickets',
      logout: 'Logout',
      savedPassengers: 'Saved Passengers'
    },
    myProfile: {
      title: 'My Profile',
      fullName: 'Full Name',
      username: 'Username',
      email: 'Email',
      edit: 'Edit Info',
      editTitle: 'Edit Profile',
      currentPassword: 'Current Password',
      newPassword: 'New Password',
      confirmPassword: 'Confirm New Password',
      saveChanges: 'Save Changes',
      updateSuccess: 'Profile updated successfully.',
      updateError: 'Error updating profile.',
      passwordMismatch: 'New passwords do not match.',
      incorrectPassword: 'Current password is incorrect.',
      changePasswordHelp: 'To change your password, fill in the fields below. Otherwise, leave them blank.'
    },
    myBookings: {
      title: 'My Bookings',
      upcoming: 'Upcoming',
      past: 'Past',
      viewETicket: 'View E-Ticket',
      cancelBooking: 'Cancel Booking',
      noUpcoming: 'You have no upcoming bookings.',
      noPast: 'You have no past bookings.',
      cancelConfirmTitle: 'Confirm Cancellation',
      cancelSuccess: 'Booking cancelled successfully.',
      cancelError: 'Booking not found or cannot be cancelled.',
      eTicketTitle: 'E-Ticket',
      issueDate: 'Issue Date',
      finalAmount: 'Final Amount',
      footerMessage: 'We wish you a pleasant journey!',
      downloadPDF: 'Download PDF',
      downloadWithPrice: 'Download with Price',
      downloadWithoutPrice: 'Download without Price',
      cancelModal: {
        title: 'Confirm Booking Cancellation',
        subtitle: 'Please review the refund details before confirming.',
        policyTitle: 'Applicable Refund Policy:',
        policyRule: 'If cancelled up to {0} hours before the flight, a {1}% penalty will be applied.',
        noPolicy: 'No specific refund policy found.',
        bookingAmount: 'Total Booking Amount:',
        penaltyAmount: 'Penalty Amount:',
        refundableAmount: 'Refundable Amount:',
        confirmButton: 'Confirm Cancellation',
        pendingMessage: 'Your cancellation request has been submitted and is under review. The amount will be returned to your wallet soon.',
      },
    },
    myTickets: {
      title: 'Support Tickets',
      newTicket: 'Create New Ticket',
      noTickets: 'You have no support tickets.',
      ticketId: 'Ticket ID',
      subject: 'Subject',
      status: 'Status',
      lastUpdate: 'Last Update',
      actions: 'Actions',
      view: 'View',
      ticketFor: 'Ticket for',
      createTicketModal: {
        title: 'Create a New Support Ticket',
        relatedBooking: 'Related Booking (optional)',
        noBooking: 'No related booking',
        subject: 'Subject',
        subjectHint: 'e.g., Request to change flight date',
        message: 'Your Message',
        messageHint: 'Please describe your request in detail...',
        submit: 'Submit Ticket',
      },
      userTicketModal: {
        title: 'View Ticket',
        replyPlaceholder: 'Write your reply here...',
        sendReply: 'Send Reply',
      }
    },
    wallet: {
      balanceTitle: 'Wallet Balance',
      transactionsTitle: 'Transaction History',
      charge: 'Charge',
      date: 'Date',
      description: 'Description',
      amount: 'Amount',
      currency: 'Currency',
      noTransactions: 'No transactions found.',
      bookingPaymentDescription: 'Payment for flight booking {0}',
      refundDescription: 'Refund for booking {0}',
    },
    savedPassengers: {
        title: 'Manage Saved Passengers',
        addPassenger: 'Add New Passenger',
        noPassengers: 'You have not saved any passengers yet.',
        deleteConfirm: 'Are you sure you want to delete this passenger?',
        modal: {
            addTitle: 'Add New Passenger',
            editTitle: 'Edit Passenger Information'
        }
    }
  },
  adminLogin: {
    brand: 'Smart Flight',
    panel: 'Administration Panel',
    title: 'Admin Login',
    subtitle: 'Log in to access the control panel.',
    email: 'Email',
    emailHint: 'Admin email',
    password: 'Password',
    login: 'Login',
    loading: 'Logging in...',
    backToSite: '← Back to Main Site',
    error: 'Invalid email or password, or you do not have access.',
  },
  accounting: accounting,
  dashboard: {
    tabs: {
      user: 'User Panel',
      admin: 'Admin Panel',
    },
    sidebar: {
      stats: 'Statistics',
      accounting: 'Accounting',
      flights: 'Flight Management',
      bookings: 'Booking Management',
      manualBooking: 'Manual Booking',
      refunds: 'Refunds',
      tickets: 'Ticket Management',
      users: 'User Management',
      tenants: 'Tenants',
      permissions: 'Permissions',
      basicData: 'Basic Data',
      content: 'Content Management',
      ads: 'Ad Management',
      telegram: 'Telegram Bot',
      whatsapp: 'WhatsApp Bot',
      exchangeRates: 'Exchange Rates',
      activityLog: 'Activity Log',
      backToSite: 'Back to Site',
    },
    noAccess: 'You do not have permission to access this section.',
    general: {
      actions: 'Actions',
      search: 'Search...',
      notFound: 'No items found.',
      notFoundWithSearch: 'No items found with these specifications.',
      confirmDelete: 'Are you sure you want to delete this item?',
      save: 'Save',
      cancel: 'Cancel',
      edit: 'Edit',
      delete: 'Delete',
      add: 'Add',
      viewDetails: 'View Details',
    },
    stats: {
      totalRevenue: 'Total Revenue',
      netProfit: 'Net Profit',
      bookingsCount: 'Bookings Count',
      usersCount: 'Users Count',
      profitableRoutes: 'Profitable Routes',
      popularRoutes: 'Popular Routes',
      userGrowth: 'User Growth (Last 30 days)',
      airlineRevenueShare: 'Airline Revenue Share',
      netProfitChartLabel: 'Net Profit',
      passengerCountChartLabel: 'Passenger Count',
      totalUsersChartLabel: 'Total Users',
      revenueChartLabel: 'Revenue'
    },
    bookings: {
      title: 'Bookings List',
      searchHint: 'Search by Ref No. or User...',
      refNumber: 'Ref No.',
      user: 'User',
      flight: 'Flight',
      date: 'Date',
      status: 'Status',
      statusValues: {
        CONFIRMED: 'Confirmed',
        CANCELLED: 'Cancelled',
        REFUNDED: 'Refunded',
        UNKNOWN: 'Unknown',
      },
      detailsModal: {
        title: 'Booking Details - Ref No. {0}',
        agent: 'Agent: {0} ({1})',
        passengers: 'Passengers',
        sendTicketTitle: 'Send Ticket to Passenger',
        sendTicketSubtitle: 'Send the ticket to the user via the following channels.',
        sendVia: {
          email: 'Email',
          sms: 'SMS',
          whatsapp: 'WhatsApp',
        },
        send: 'Send Ticket',
        sendSuccess: 'Ticket successfully sent via {0} to the user.',
        sendError: 'Please select at least one channel to send.',
        downloadTicketTitle: 'Download Ticket',
        downloadWithPrice: 'Download with Price',
        downloadWithoutPrice: 'Download without Price',
        editInfo: 'Edit Information',
        cancelBooking: 'Cancel Booking',
        reconfirmBooking: 'Reconfirm',
        currentStatus: 'Current Status:',
        buyerReference: 'Buyer Reference',
        notes: 'Notes',
      }
    },
    manualBooking: {
      title: 'Manual Booking',
      subtitle: 'Create a booking and issue a ticket for tickets purchased by phone or in person.',
      flightDetails: 'Flight Details',
      passengerDetails: 'Passenger Details',
      customerAndFinancials: 'Customer & Financials',
      customer: 'Customer',
      purchasePrice: 'Ticket Purchase Price',
      sellingPrice: 'Ticket Selling Price',
      createBooking: 'Create Booking & Issue Ticket',
      buyerReference: 'Buyer Reference',
      notes: 'Notes',
      totalCapacity: 'Total Capacity',
      seatsForSale: 'Seats for Sale',
    },
    users: {
      title: 'Users List',
      addUser: 'Add New User',
      fullName: 'Full Name',
      username: 'Username',
      role: 'Role',
      status: 'Status',
      manage: 'Manage',
      resetPassword: 'Reset Password',
      chargeWallet: 'Charge Wallet',
      statusValues: {
        ACTIVE: 'Active',
        SUSPENDED: 'Suspended',
        UNKNOWN: 'Unknown'
      },
      roleValues: {
        USER: 'User',
        SUPPORT: 'Support',
        EDITOR: 'Editor',
        SUPER_ADMIN: 'Super Admin',
        AFFILIATE: 'Affiliate',
        ACCOUNTANT: 'Accountant',
      },
      detailsModal: {
        title: 'Manage User',
        email: 'Email:',
        role: 'Role',
        status: 'Status',
        specialAccess: 'Special Access',
        bypassRateLimit: 'Bypass Rate Limits',
        bypassRateLimitDesc: 'User can view and purchase all flights regardless of the set price cap for routes.',
        permissionsForRole: 'Permissions for "{0}" role:',
        noPermissions: 'This role has no special permissions in the admin panel.',
        displayCurrencies: 'Display Currencies',
        displayCurrenciesHelp: 'Select the currencies in which prices will also be displayed for this user.',
        errors: {
          cantChangeSelfRole: 'Super Admin cannot change their own role.',
          cantChangeSelfStatus: 'Super Admin cannot suspend their own account.',
          noAccessToChangeRole: 'You do not have permission to change roles.',
          noAccessToChangeBypass: 'Only Super Admin can change this setting.',
        },
        saveChanges: "Save Changes"
      },
      addModal: {
        title: 'Add New User',
        subtitle: 'Enter the new user\'s information.',
        saveUser: "Save User"
      },
      resetPasswordModal: {
        title: 'Reset Password',
        subtitle: 'You are resetting the password for user {0}.',
        newPassword: 'New Password',
        confirmPassword: 'Confirm New Password',
        save: 'Save New Password',
        errors: {
          passwordMismatch: 'New passwords do not match.',
          passwordRequired: 'Password cannot be empty.'
        }
      },
      chargeWalletModal: {
        title: 'Charge User Wallet',
        subtitle: 'You are adding credit to the wallet of {0}.',
        amount: 'Amount',
        currency: 'Currency',
        description: 'Description',
        optional: 'Optional',
        descriptionHint: 'e.g., Bonus deposit',
        defaultDescription: 'Admin deposit for user {0}',
        save: 'Add Credit'
      }
    },
    tenants: {
      title: 'Manage Tenants',
      addTenant: 'Add New Tenant',
      name: 'Tenant Name',
      status: 'Status',
      logoUrl: 'Logo URL',
      primaryColor: 'Primary Color',
      noTenant: 'No Tenant',
      selectTenant: 'Select a tenant...',
      users: 'Users',
      bookings: 'Bookings',
      revenue: 'Revenue',
      statusValues: {
          ACTIVE: 'Active',
          INACTIVE: 'Inactive',
      },
      modal: {
          addTitle: 'Add New Tenant',
          editTitle: 'Edit Tenant',
          tenantUsers: 'Users in this Agency',
      }
    },
    permissions: {
      title: 'Manage Role Permissions',
      subtitle: 'Assign specific permissions to each user role.',
      role: 'Role',
      superAdminNote: 'The Super Admin role has all permissions and cannot be modified.',
      saveSuccess: 'Permissions updated successfully.'
    },
    tickets: {
      title: 'Ticket Management',
      searchHint: 'Search by ID, subject or user...',
      id: 'Ticket ID',
      subject: 'Subject',
      user: 'User',
      priority: 'Priority',
      lastUpdate: 'Last Update',
      status: 'Status',
      viewAndReply: 'View & Reply',
      statusValues: {
        OPEN: 'Open',
        IN_PROGRESS: 'In Progress',
        CLOSED: 'Closed',
      },
      priorityValues: {
        LOW: 'Low',
        MEDIUM: 'Medium',
        HIGH: 'High',
      },
      detailsModal: {
        relatedToBooking: 'Related to booking {0}',
        status: 'Status:',
        priority: 'Priority:',
        replyPlaceholder: 'Write your reply here...',
        sendVia: 'Send via:',
        sendReply: 'Send Reply',
      }
    },
    basicData: {
        title: "Basic Data Management",
        subtitle: "Manage the core definitions of the system from this section.",
        tabs: {
            airlines: "Airlines",
            aircrafts: "Aircrafts",
            flightClasses: "Flight Classes",
            airports: "Airports",
            commissionModels: "Commission Models",
            rateLimits: "Rate Limits",
            currencies: "Wallets & Currencies",
            refundPolicies: "Refund Policies",
            countries: "Countries",
        },
        addNew: "Add New Item",
        searchAirportHint: 'Search for an airport...',
        headers: {
            logo: "Logo",
            airlineName: "Airline Name",
            aircraftName: "Aircraft Name",
            capacity: "Capacity",
            className: "Class Name",
            iata: "IATA",
            airportName: "Airport Name",
            city: "City",
            country: "Country",
            currencyName: "Currency Name",
            code: "Code",
            symbol: "Symbol",
            rateToUsd: 'Rate to USD',
            countryName: "Country Name",
            dialingCode: "Dialing Code",
        },
        noItems: "No items to display.",
        modals: {
            addAirline: "Add Airline",
            editAirline: "Edit Airline",
            airlineName: "Airline Name",
            logoUrl: "Logo URL",
            addAircraft: "Add Aircraft",
            editAircraft: "Edit Aircraft",
            aircraftName: "Aircraft Name",
            addFlightClass: "Add Flight Class",
            editFlightClass: "Edit Flight Class",
            classNameLabel: "Class Name",
            addAirport: "Add Airport",
            editAirport: "Edit Airport",
            addCurrency: "Add Currency",
            editCurrency: "Edit Currency",
            currencyName: "Currency Name",
            currencyCode: "Currency Code (e.g., USD)",
            currencySymbol: "Symbol",
            addCountry: "Add Country",
            editCountry: "Edit Country",
        }
    },
    commissionModels: {
        addNew: "Add New Model",
        name: "Model Name",
        calcType: "Calculation Type",
        charter: "Charterer Commission",
        creator: "Creator Commission",
        webservice: "Webservice Commission",
        calcTypes: {
            PERCENTAGE: 'Percentage',
            FIXED_AMOUNT: 'Fixed Amount',
        },
        modals: {
            addTitle: "Add Commission Model",
            editTitle: "Edit Commission Model",
            amountLabel: "Amount ({0})",
            percentLabel: "Percent (%)",
        },
    },
    rateLimits: {
        addNew: "Add New Limit",
        from: "From",
        to: "To",
        maxPrice: "Max Price",
        modals: {
            addTitle: "Add Rate Limit",
            editTitle: "Edit Rate Limit",
            fromCity: "Origin City",
            toCity: "Destination City",
            maxPriceLabel: "Max Price ({0})",
            select: "Select...",
        }
    },
    refundPolicies: {
        addNew: "Add New Policy",
        name: "Policy Name",
        rulesCount: "Rules Count",
        airline: "Airline",
        type: "Type",
        policyTypes: {
            GENERAL: 'General',
            DOMESTIC: 'Domestic',
            INTERNATIONAL: 'International',
        },
        generalPolicy: "General",
        modals: {
            addTitle: "Add New Refund Policy",
            editTitle: "Edit Refund Policy",
            nameLabel: "Policy Name",
            airlineLabel: "Dedicated Airline",
            policyTypeLabel: "Policy Type",
            rulesLabel: "Policy Rules",
            addRule: "Add Rule",
            hoursBeforeDeparture: 'Hours Before Departure',
            penaltyPercentage: 'Penalty Percentage (%)',
        },
    },
    flights: {
      title: "Flights List",
      addNew: "Create New Flight",
      flightNumber: "Flight No.",
      route: "Route",
      departureDate: "Departure Date",
      availableSeats: "Seats for sale",
      price: "Price",
      status: "Status",
      salesReportButton: "Sales Report",
      headers: {
        capacity: "Total Capacity",
        sold: "Sold",
        remaining: "Remaining",
        revenue: "Revenue",
        loadFactor: "Load Factor"
      },
      stats: {
        totalFlights: 'Total Upcoming Flights',
        totalSeats: 'Total Seats',
        avgLoadFactor: 'Average Load Factor',
        totalRevenue: 'Total Expected Revenue',
      },
      tabs: {
        upcoming: 'Upcoming',
        past: 'Past',
      },
      searchPlaceholder: 'Search flight no, airline, route...',
      actionsMenu: {
        edit: 'Edit',
        delete: 'Delete',
        toggleStatus: 'Toggle Status',
        salesReport: 'Sales Report',
      },
      salesReport: {
        title: "Flight Sales Report",
        agency: "Agency / User",
        seatsSold: "Seats Sold",
        noSales: "No sales have been recorded for this flight."
      },
      statusValues: {
        SCHEDULED: "Scheduled",
        CANCELLED: "Cancelled",
        DELAYED: "Delayed"
      },
      toggleOn: "Activate Flight",
      toggleOff: "Deactivate Flight",
      noFlights: "No flights found.",
      capacityReport: {
          title: "Flight Capacity Report",
          totalCapacity: "Total Capacity",
          salesCapacity: "Sales Capacity",
          soldCapacity: "Sold Capacity",
          remainingCapacity: "Remaining Capacity",
      },
      form: {
        editTitle: "Edit Flight {0}",
        createTitle: "Create New Flight",
        mainInfo: "Main Information",
        airline: "Airline",
        aircraft: "Aircraft",
        flightClass: "Flight Class",
        departure: "Departure",
        airport: "Airport",
        departureDateTime: "Departure Date & Time",
        arrival: "Arrival",
        arrivalDateTime: "Arrival Date & Time",
        priceAndCapacity: "Price & Capacity Details",
        basePrice: "Base Price",
        taxes: "Taxes",
        totalCapacity: "Total Capacity",
        duration: "Duration",
        stops: "Stops",
        closeBookingHours: "Close Booking (hours before)",
        status: "Flight Status",
        commissionModel: "Commission Model",
        refundPolicy: "Refund Policy",
        sourcingType: "Sourcing Type",
        sourcingTypes: {
          CHARTER: "Charter",
          WEB_SERVICE: "Web Service",
          FLOATING: "Floating",
          MANUAL: "Manual Entry"
        },
        backToList: "Back to List",
        saveFlight: "Save Flight",
        select: "Select...",
        durationHint: "e.g., 3h 30m",
        baggageHint: "e.g., 20 kg",
        selectedPolicyRules: "Selected Policy Rules:",
        noRulesInPolicy: "No rules are defined in this policy.",
        agencyAllotments: "Agency Seat Allotments",
        addAllotment: "Add Allotment",
        agency: "Agency",
        seats: "Number of Seats",
        deadline: "Deadline"
      },
      deletePolicyInUseError: "Cannot delete this policy as it's used by at least one flight.",
      deleteError: "Cannot delete flight as it is linked to at least one booking."
    },
    activityLog: {
      title: "Activity Log",
      searchHint: "Search logs...",
      user: "User",
      action: "Action",
      timestamp: "Timestamp",
      loggedIn: "Logged in.",
      adminLoggedIn: "Logged into admin panel.",
      loggedOut: "Logged out.",
      bookingSuccess: "New booking successfully created with reference {0}.",
      bookingCancelled: "Booking {0} was cancelled.",
      bookingCancelledSelf: "Booking {0} was cancelled by user.",
      bookingStatusChanged: "Status of booking {0} was changed to {1}.",
      processedRefund: "Processed a refund of {0} {1} for booking {2}.",
      userRoleChanged: "Role of user {0} was changed to {1}.",
      userStatusChanged: "Status of user {0} was changed to {1}.",
      userBypassChanged: "Bypass rate limits permission was {0} for user {1}.",
      userPasswordReset: "Password for user {0} was reset.",
      userWalletCharged: 'Charged wallet of user {2} with {0} {1}.',
      commissionPaid: "Paid a commission of {0} {1} to {2} for booking {3}.",
      enabled: "enabled",
      disabled: "disabled",
      userCreated: "New user created: {0}.",
      userNameChanged: "Name of user {0} was changed to {1}.",
      profileNameChanged: "Changed their name from {0} to {1}.",
      profilePasswordChanged: "Changed their password.",
      ticketUpdated: "Ticket {0} was updated.",
      ticketReplied: "Replied to ticket {0}.",
      ticketCreated: 'User created a new ticket with ID {0}.',
      userRepliedToTicket: 'User replied to ticket {0}.',
      basicDataCreated: "New {0} was created: {1}.",
      basicDataUpdated: "{0} was updated: {1}.",
      basicDataDeleted: "{0} was deleted: {1}.",
      rateLimitCreated: "Rate limit for {0} to {1} was created with max price {2} {3}.",
      rateLimitUpdated: "Rate limit for {0} to {1} was updated to {2} {3}.",
      rateLimitDeleted: "Rate limit for {0} to {1} was deleted.",
      flightCreated: "New flight created: {0} ({1} - {2}).",
      flightUpdated: "Flight {0} was updated.",
      flightDeleted: "Flight {0} was deleted.",
      expenseCreated: "New expense recorded for {0} {1}: {2}.",
      savedPassengersAdded: 'Saved {0} new passengers to profile.',
      savedPassengerAdded: 'New passenger saved: {0}.',
      savedPassengerUpdated: 'Passenger info updated: {0}.',
      savedPassengerDeleted: 'Passenger deleted: {0}.',
      siteContentUpdated: 'Site content was updated.',
      adCreated: 'New advertisement created: {0}.',
      adUpdated: 'Advertisement updated: {0}.',
      adDeleted: 'Advertisement deleted: {0}.',
      manualBookingCreated: 'Manual booking {0} created for customer {1}.',
      log: {
        airline: "airline",
        aircraft: "aircraft",
        flightClass: "flight class",
        airport: "airport",
        commissionModel: "commission model",
        currency: "currency",
        refundPolicy: "refund policy",
      },
      refundApproved: 'Refund request for booking {0} was approved by {1}.',
      refundRejected: 'Refund request for booking {0} was rejected by {1} with reason: {2}.',
      refundAdvanced: 'Refund request for booking {0} was advanced to {1} stage.',
    },
    refunds: {
      title: 'Refund Requests Management',
      subtitle: 'Review and approve or reject user refund requests.',
      bookingRef: 'Booking Ref',
      user: 'User',
      requestDate: 'Request Date',
      status: 'Status',
      amount: 'Amount',
      noRequests: 'There are no refund requests.',
      tabs: {
        expertReview: 'Expert Review',
        financialReview: 'Financial Review',
        payment: 'Payment',
        history: 'History',
      },
      statusValues: {
        PENDING_EXPERT_REVIEW: 'Pending Expert Review',
        PENDING_FINANCIAL_REVIEW: 'Pending Financial Review',
        PENDING_PAYMENT: 'Pending Payment',
        REJECTED: 'Rejected',
        COMPLETED: 'Completed',
      },
      actions: {
        approveForFinancial: 'Approve for Financial Review',
        approveForPayment: 'Approve for Payment',
        processPayment: 'Process Payment',
      },
      history: {
        expertReviewedBy: 'Expert reviewed by',
        financialReviewedBy: 'Financially reviewed by',
        paidBy: 'Paid by',
        rejectedBy: 'Rejected by',
      },
      detailsModal: {
        title: 'Refund Request Details',
        refundId: 'Refund ID',
        originalAmount: 'Original Amount',
        penaltyAmount: 'Penalty Amount',
        refundAmount: 'Refund Amount',
        approveButton: 'Approve Refund',
        rejectButton: 'Reject Refund',
        rejectionReason: 'Reason for Rejection',
        rejectionPlaceholder: 'Enter the reason for rejecting this request...',
        confirmRejectionButton: 'Confirm Rejection',
        processedBy: 'Processed by',
      },
    },
     ads: {
      title: 'Advertisement Management',
      addNew: 'Add New Ad',
      image: 'Image',
      adTitle: 'Title',
      placement: 'Placement',
      status: 'Status',
      link: 'Link',
      placements: {
        SEARCH_RESULTS_TOP: 'Top of Search Results',
        SIDEBAR_BOTTOM: 'Bottom of Sidebar',
      },
      statusValues: {
        active: 'Active',
        inactive: 'Inactive',
      },
      modal: {
        addTitle: 'Add New Advertisement',
        editTitle: 'Edit Advertisement',
        internalTitle: 'Internal Title (for identification)',
        internalTitleHint: 'e.g., Summer sale banner',
        imageUrl: 'Ad Image',
        upload: 'Upload image',
        linkUrl: 'Destination Link',
        linkUrlHint: 'https://example.com',
      },
    },
    telegram: {
      title: 'Telegram Bot Management',
      subtitle: 'Send notifications for important system events to Telegram.',
      config: {
        title: 'Configuration',
        enable: 'Enable Notification Bot',
        token: 'Bot Token',
        tokenHelp: 'Get this from BotFather.',
        chatId: 'Chat ID',
        chatIdHelp: 'The chat or channel ID to send notifications to.',
        save: 'Save Settings',
        test: 'Send Test Message',
      },
      events: {
        title: 'Notification Events',
        newBooking: 'New Booking',
        bookingCancellation: 'Booking Cancellation',
        refundUpdate: 'Refund Status Update',
        newUser: 'New User Signup',
        newTicket: 'New Support Ticket',
      },
      saveSuccess: 'Settings saved successfully!',
      testSuccess: 'Test message sent successfully!',
      testError: 'Failed to send test message. Please check your configuration.',
    },
    whatsapp: {
      title: 'WhatsApp Bot Management',
      subtitle: 'Send important system notifications to users\' WhatsApp.',
      config: {
        title: 'Configuration',
        enable: 'Enable Notification Bot',
        apiKey: 'API Key (Permanent Access Token)',
        apiKeyHelp: 'Get this token from Meta for Developers.',
        phoneId: 'Phone Number ID',
        phoneIdHelp: 'The ID for the phone number registered on the WhatsApp platform.',
      },
      events: {
        title: 'Notification Events',
        bookingSuccess: 'Send successful booking confirmation',
        flightChange: 'Notify about flight changes (delay, reschedule, cancellation)',
      }
    },
  },
  affiliate: {
    sidebar: {
        dashboard: 'Dashboard',
        myFlights: 'My Flights',
        myBookings: 'My Bookings',
        accounting: 'Accounting',
    },
    stats: {
        totalEarnings: 'Total Earnings',
        totalBookings: 'Total Bookings',
    },
    bookings: {
        title: 'My Flight Bookings',
        bookingId: 'Booking ID',
        flight: 'Flight',
        passengers: 'Passengers',
        date: 'Date',
        status: 'Status',
        maskedPassenger: 'Passenger {0}',
        exportPDF: 'Export PDF',
        exportExcel: 'Export Excel',
    },
    accounting: {
        title: 'My Accounting',
        totalEarnings: 'Total Earnings',
        transactions: 'Commission Transactions',
        date: 'Date',
        description: 'Description',
        amount: 'Amount',
    },
    commissionPayoutDescription: 'Commission payout for booking {0} ({1})',
  },
  currencies: {
    IRR: 'Iranian Rial',
    USD: 'US Dollar',
    IQD: 'Iraqi Dinar',
    SAR: 'Saudi Riyal'
  },
  placeholders: {
    toman: 'Toman',
    rial: 'Rial',
  },
  general: {
    and: "and"
  },
  adBanner: {
    label: 'Ad'
  },
  popularRoutes: {
    title: 'Suggested Popular Routes',
    searchNow: 'Search this route'
  },
  whatsapp: {
    bookingSuccessMessage: '✅ Your booking with reference {0} for flight {1} for passengers {2} has been successfully confirmed. We wish you a pleasant journey!',
    flightChange: {
      baseMessage: '📢 Dear customer {0}, please note: there has been a change in your flight information for flight number {1} from {2} to {3}.',
      status: 'The new status of the flight is: {0}.',
      time: 'The new departure time is: {0} at {1}.'
    }
  }
};
